/**
 * 연속 부분수열 2
 *
 * N개의 수로 이루어진 수열이 주어집니다.
 * 이 수열에서 연속부분수열의 합이 특정숫자 M이하가 되는 경우가 몇 번 있는지 구하는 프로그램을 작성하세요.
 * 만약 N=5, M=5이고 수열이 다음과 같다면 1 3 1 2 3
 * 합이 5이하가 되는 연속부분수열은 {1}, {3}, {1}, {2}, {3}, {1, 3}, {3, 1}, {1, 2}, {2, 3}, {1, 3, 1}로 총 10가지입니다.
 *
 * 첫째 줄에 N(1≤N≤100,000), M(1≤M≤100,000,000)이 주어진다.
 * 수열의 원소값은 1,000을 넘지 않는 자연수이다.
 */

function solution(m, arr) {
  let [answer, lt, sum] = [0, 0, 0];

  for (let rt = 0; rt < arr.length; rt++) {
    // right 인덱스 값을 m 보다 초과할 때까지 더한다.
    // right 값이 옮겨질 때마다, right 가 가리키는 값은 연속수열
    sum += arr[rt];
    // sum 값이 m 보다 초과할 경우, left 값을 빼준 후 옮긴다.
    while (sum > m) {
      sum -= arr[lt++];
    }
    // m 이하인 부분집합의 갯수를 아래와 같이 구한다.
    answer += rt - lt + 1;
  }
  return answer; // 10
}

let a = [1, 3, 1, 2, 3];
console.log(solution(5, a));
